if(Sys.info()[["user"]] == 'caayala'){
path <- "/Users/caayala/Dropbox (DESUC)/DESUC/Proyectos/3 Políticas Públicas/EPSOC 2018/BD/"
} else if(Sys.info()[["user"]] == 'Andres') {
path <- "/Users/Andres/Dropbox (DESUC)/Proyectos/3 Políticas Públicas/EPSOC 2018/BD/"
}
epsoc <-haven::read_spss(paste0(path, '190117 - EPSOC Base parcial 13.sav')) %>%
clean_names() %>%
mutate(region = folio %/% 100000)
names(epsoc) <- tolower(gsub("_", ".", names(epsoc)))
grabacion <- FALSE
kable_estilo <- function(tabla){
tabla %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width=F)
}
makeVlist <- function(dta) {
labels <- sapply(dta, function(x) attr(x, "label"))
tibble(name = names(labels),
label = labels)
}  ## Etiquetas variables
labs.epsoc <- makeVlist(epsoc)
labs.epsoc <- labs.epsoc %>%
mutate(label2 = map_chr(label, toString))
labs.epsoc <- get_label(epsoc)
epsoc %>%
count(region, status) %>%
spread(status, n) %>%
janitor::adorn_totals(where = c('row', 'col')) %>%
kable() %>%
kable_estilo()
epsoc <- epsoc %>%
mutate(rango_edad = rec(edad.seleccionado,
rec = "1:17 =  1[menor de 18 años];
18:24 = 2[18 a 24 años];
25:44 = 3[25 a 44 años];
45:59 = 4[45 a 59 años]"))
frq(epsoc, rango_edad)
epsoc %>%
filter(is.na(rango_edad)) %>%
select(sexo.seleccionado, edad.seleccionado, situacion.laboral.seleccionado)
epsoc <- epsoc %>%
mutate(rango_edad = replace(rango_edad, edad.seleccionado %in% c(60, 61), 4))
epsoc %>%
count(sexo.seleccionado, rango_edad, situacion.laboral.seleccionado) %>%
mutate_all(as_label) %>%
mutate(prop = round(n/sum(n), 4)) %>%
kable() %>%
kable_estilo()
homologar_fechas <- function(fecha){
fecha %>%
str_replace_all(c("^\\D{3} " = "", '(.*)(\\d{4}$)' = '\\2 \\1')) %>%
anytime::anytime()
}
epsoc <- epsoc %>%
mutate_at(vars(starts_with('time')), homologar_fechas)
epsoc <- epsoc %>%
mutate(duration = str_replace_all(duration, c('-' = '', '^(\\d{2})' = '0\\.\\1'))) %>%
separate(duration, into = c('dura.d', 'duracion'), sep = '\\.', convert = TRUE, remove = FALSE) %>%
mutate(duracion.t = as.duration(hms(duracion) + hms(hms::hms(hour = (24 * dura.d)))))
epsoc$duracion.t.min <- epsoc$duracion.t@.Data/60
epsoc %>%
ggplot(aes(x = duracion.t.min)) +
geom_histogram(binwidth = 5) +
theme_bw() +
ggtitle("Distribución duración entrevistas por región (escala truncada < 150 minutos)") +
labs(x = "Duración total entrevista (minutos)",
y = "Frecuencia") +
coord_cartesian(xlim = 0:150) +
scale_x_continuous(breaks = seq(0, 150, by = 15)) +
facet_grid(as_factor(region) ~ .)
epsoc %>%
filter(as.double(duracion.t.min) < 20) %>%
select(folio, duracion.t.min) %>%
knitr::kable(col.names = c("Folio", "Duración (minutos)"),
caption = "Entrevistas de menos de 20 minutos",
digits = 1) %>%
kable_estilo() %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
epsoc %>%
filter(as.double(duracion.t.min) > 150) %>%
transmute(folio, duracion.t.min / 60) %>%
knitr::kable(col.names = c("Folio", "Duración (horas)"),
caption = "Entrevistas de más de 150 minutos",
digits = 1) %>%
kable_estilo() %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
## Comienzo encuesta
epsoc$time1.hms <- hms::as.hms(epsoc$time1)
epsoc$time1.wday <- lubridate::wday(epsoc$time1)
epsoc$time1.dmy <- date(epsoc$time1)
epsoc %>%
count(time1.dmy) %>%
mutate(n_mean = mean(n)) %>%
ggplot(aes(x = time1.dmy, y = n)) +
geom_line() +
geom_smooth() +
geom_hline(aes(yintercept = n_mean), colour = 'green') +
geom_label(aes(x = min(time1.dmy)[[1]], y = n_mean[[1]], label = round(n_mean, 1))) +
labs(title = 'Número de encuestas por día') +
scale_x_date(breaks = '2 weeks')
epsoc %>%
count(time1.wday) %>%
mutate(n_mean = mean(n)) %>%
ggplot(aes(x = time1.wday, y = n)) +
geom_line() +
geom_smooth() +
geom_hline(aes(yintercept = n_mean), colour = 'green') +
geom_label(aes(x = min(time1.wday)[[1]], y = n_mean[[1]], label = round(n_mean, 1))) +
labs(title = 'Número de encuestas por día de la semana') +
scale_x_continuous(breaks = seq(7))
epsoc %>%
select(folio, latitude, srvyr) %>%
group_by(srvyr) %>%
mutate(n.enc = length(folio)) %>%
filter(is.na(latitude)) %>%
select(folio, srvyr, n.enc) %>%
mutate(n.enc.sg = (length(folio)/n.enc)*100) %>%
arrange(srvyr, folio) %>%
group_by_at(vars(-folio)) %>%
nest() %>%
mutate(Folio = map_chr(data, ~ flatten(.) %>% str_c(., collapse = ', '))) %>%
select(-data) %>%
kable(digits = 1,
col.names = c("Encuestador", "Total encuestas", "% sin georef.", "folios")) %>%
kable_estilo()
epsoc_geo <- epsoc %>%
select(folio, sbj.num, region, srvyr, longitude, latitude) %>%
filter(!is.na(latitude)) %>%
sf::st_as_sf(coords = c('longitude', 'latitude'),
crs = "+proj=longlat +ellps=GRS80")
sf::write_sf(epsoc_geo,
here::here('validacion_epsoc_puntos_respuesta.kml'),
dataset_options=c("NameField=folio"),
delete_dsn=TRUE)
epsoc_geo %>%
filter(region == 2) %>%
ggplot(aes(color = srvyr)) +
geom_sf()
epsoc_geo %>%
filter(region == 9) %>%
ggplot(aes(color = srvyr)) +
geom_sf()
epsoc_geo %>%
filter(region == 13) %>%
ggplot(aes(color = srvyr)) +
geom_sf()
epsoc %>%
select(folio, i.1.grupo) %>%
head()
epsoc %>%
transmute(i.1.grupo = as.integer(i.1.grupo),
region) %>%
group_by_all() %>%
count() %>%
group_by(region) %>%
mutate(n_mean = mean(n)) %>%
ggplot(aes(x = as_factor(i.1.grupo), y = n)) +
geom_col() +
geom_hline(aes(group = region, yintercept = n_mean), colour = 'green') +
geom_text(aes(label = ..y..), nudge_y = 1, size = 3) +
facet_grid(rows = vars(region)) +
labs(title = 'Distribución de viñetas')
## Comienzo viñetas
epsoc$time2.hms <- hms::as.hms(epsoc$time2)
epsoc$time2.dmy <- date(epsoc$time2)
## Fin viñetas
epsoc$time3.hms <- hms::as.hms(epsoc$time3)
epsoc$time3.dmy <- date(epsoc$time3)
epsoc$dura.vinetas <- difftime(epsoc$time3, epsoc$time2,
units = "mins")
ggplot(epsoc, aes(x = time2.dmy, y = time2.hms)) +
geom_point() +
labs(x = "Día", y = "Hora") +
ggtitle("Día y hora comienzo actividad viñetas") +
theme_bw()
ggplot(epsoc, aes(x = srvyr, y = time2.hms)) +
geom_point() +
labs(x = "Encuestador", y = "Hora") +
ggtitle("Hora comienzo actividad viñetas según encuestador") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1))
epsoc %>%
mutate(vin.cort = ifelse(dura.vinetas < 5, "< 5'", ">= 5'")) %>%
ggplot(aes(dura.vinetas)) +
geom_histogram(aes(fill = vin.cort)) + theme_bw() +
theme(legend.title=element_blank()) +
ggtitle("Duración ejercicio viñetas") +
xlab("Minutos")
ggplot(epsoc, aes(x = srvyr, y = dura.vinetas,
colour = status)) +
geom_point(alpha = 0.5,
position = position_jitter(width = .2)) +
scale_color_manual(values = c('green', 'orange', 'blue')) +
facet_grid(cols = vars(region), scales = 'free_x', space = 'free_x') +
labs(x = "Encuestador", y = "minutos") +
ggtitle("Duración de actividad viñetas según encuestador según región") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1))
kable(epsoc %>%
group_by(srvyr) %>%
mutate(n.enc = length(folio)) %>%
select(folio, dura.vinetas, srvyr, n.enc) %>%
filter(dura.vinetas <= 10) %>%
mutate(n.enc.cort = (length(folio)/n.enc)*100) %>%
arrange(srvyr, dura.vinetas),
digits = 1,
col.names = c("Folio", "Duración viñetas", "Encuestador", "Total encuestas", "% cortas"),
caption = "Ejercicio viñetas de menos de 10 minutos") %>%
kable_estilo() #%>%
#column_spec(1, width = "10em") %>%
#column_spec(2, width = "10em") %>%
#column_spec(3, width = "10em")
flat_table(epsoc, num.grupo.jd, region, margin = 'col')
var_rec_justa <- find_var(epsoc, pattern = stringr::regex('obrero|pdte'), search = 'label')
var_rec_justa$var.label %>%
str_replace_all(c('Quisiéramos saber cuánto dinero cree Ud. que ganan las personas al mes en estos trabajos u ocupaciones que se mencionan más adelante, después de considerar los descuentos de salud, previsión u otros impuestos' = 'cuánto dinero cree Ud. que ganan',
'Pensando en lo que Ud. cree que las personas en estos trabajos deberían ganar al mes, después de los descuentos de salud, previsión u otros impuestos. ' = '')) %>%
paste0(var_rec_justa$var.name, " - ", sort(rep(seq(6), 4)), " - ", .)
epsoc %>%
arrange(num.grupo.jd, time1) %>%
select(one_of(var_rec_justa$var.name)) %>%
naniar::vis_miss() +
labs(title = 'Distribución de respuestas en preguntas de recompensa justa') +
theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 0))
item_just <- find_var(epsoc, "usto")
item_just$var.name
v <- validator(j := var_group(i.6.a1, i.8.a1, i.9.a1, i.10.a1, i.11.a1, i.12.a1, i.13.a1, i.16.a1,
i.1.h1, i.2.h1, i.5.h1, i.7.h1, i.8.h1, i.10.h1, i.11.h1, i.12.h1, i.14.h1),
j >= 1,
j <= 9,
j != 6,
j != 7)
cf2 <- confront(epsoc, v)
s.cf2 <- summary(cf2)
knitr::kable(s.cf2) %>%
kable_estilo()
epsoc$duration <- chron(times=epsoc$duration)
cf <- check_that(epsoc, edad.seleccionado <= 59 & edad.seleccionado >= 18,
sexo.enc == sexo.seleccionado)
s.cf <- summary(cf)
knitr::kable(s.cf) %>%
kable_estilo()
## Fecha de nacimiento y edad seleccionado
epsoc$enc.edad[as.character(epsoc$enc.edad) == "1582-10-14"] <- NA # comportamiento extraño al importar desde SPSS
edad <- tibble(Folio = epsoc$folio[is.na(epsoc$enc.edad)],
Fecha = epsoc$enc.edad[is.na(epsoc$enc.edad)],
Edad = epsoc$edad.seleccionado[is.na(epsoc$enc.edad)])
knitr::kable(edad,
caption = "Casos sin fecha de nacimiento en `enc_edad`",
col.names = c("Folio", "Fecha nacimiento", "Edad")) %>%
kable_estilo()
epsoc %>%
filter(sexo.enc != sexo.seleccionado) %>%
select(Folio = folio, sexo.enc, sexo.seleccionado) %>%
knitr::kable(col.names = c("Folio", "sexo.enc", "sexo.seleccionado"),
caption = "Entrevistas donde sexo encuestado y seleccionado no coinciden") %>%
kable_estilo()
path_general <- '../SurveyToGo Attachments/EPSOC 2018/'
archivos <- dir(path = path_general,
pattern = str_c(epsoc$sbj.num, collapse = '|'),
recursive = TRUE)
file.copy(from = str_c(path_general, archivos),
to = "grabaciones/",
overwrite = TRUE)
install.packages(c("googledrive", "qgraph", "ranger"))
pacman::p_load(tidyverse, lubridate, anytime, chron,
haven, sf,
sjlabelled, sjmisc,
validate, eeptools, kableExtra, janitor, here, naniar,
captioner)
if(Sys.info()[["user"]] == 'caayala'){
path <- "/Users/caayala/Dropbox (DESUC)/DESUC/Proyectos/3 Políticas Públicas/EPSOC 2018/BD/"
} else if(Sys.info()[["user"]] == 'Andres') {
path <- "/Users/Andres/Dropbox (DESUC)/Proyectos/3 Políticas Públicas/EPSOC 2018/BD/"
}
epsoc <-haven::read_spss(paste0(path, '190124 - EPSOC Base parcial 14.sav')) %>%
clean_names() %>%
mutate(region = folio %/% 100000)
names(epsoc) <- tolower(gsub("_", ".", names(epsoc)))
grabacion <- TRUE
kable(epsoc %>%
group_by(srvyr) %>%
mutate(n.enc = length(folio)) %>%
select(folio, dura.vinetas, srvyr, n.enc) %>%
filter(dura.vinetas <= 10) %>%
mutate(n.enc.cort = (length(folio)/n.enc)*100) %>%
arrange(srvyr, dura.vinetas),
digits = 1,
col.names = c("Folio", "Duración viñetas", "Encuestador", "Total encuestas", "% cortas"),
caption = "Ejercicio viñetas de menos de 10 minutos") %>%
kable_estilo() #%>%
pacman::p_load(tidyverse, lubridate, anytime, chron,
haven, sf,
sjlabelled, sjmisc,
validate, eeptools, kableExtra, janitor, here, naniar,
captioner)
if(Sys.info()[["user"]] == 'caayala'){
path <- "/Users/caayala/Dropbox (DESUC)/DESUC/Proyectos/3 Políticas Públicas/EPSOC 2018/BD/"
} else if(Sys.info()[["user"]] == 'Andres') {
path <- "/Users/Andres/Dropbox (DESUC)/Proyectos/3 Políticas Públicas/EPSOC 2018/BD/"
}
epsoc <-haven::read_spss(paste0(path, '190124 - EPSOC Base parcial 14.sav')) %>%
clean_names() %>%
mutate(region = folio %/% 100000)
names(epsoc) <- tolower(gsub("_", ".", names(epsoc)))
grabacion <- TRUE
kable_estilo <- function(tabla){
tabla %>%
kableExtra::kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
full_width=F)
}
makeVlist <- function(dta) {
labels <- sapply(dta, function(x) attr(x, "label"))
tibble(name = names(labels),
label = labels)
}  ## Etiquetas variables
labs.epsoc <- makeVlist(epsoc)
labs.epsoc <- labs.epsoc %>%
mutate(label2 = map_chr(label, toString))
labs.epsoc <- get_label(epsoc)
epsoc %>%
count(region, status) %>%
spread(status, n) %>%
janitor::adorn_totals(where = c('row', 'col')) %>%
kable() %>%
kable_estilo()
epsoc <- epsoc %>%
mutate(rango_edad = rec(edad.seleccionado,
rec = "1:17 =  1[menor de 18 años];
18:24 = 2[18 a 24 años];
25:44 = 3[25 a 44 años];
45:59 = 4[45 a 59 años]"))
frq(epsoc, rango_edad)
epsoc %>%
filter(is.na(rango_edad)) %>%
select(sexo.seleccionado, edad.seleccionado, situacion.laboral.seleccionado)
epsoc <- epsoc %>%
mutate(rango_edad = replace(rango_edad, edad.seleccionado %in% c(60, 61), 4))
epsoc %>%
count(sexo.seleccionado, rango_edad, situacion.laboral.seleccionado) %>%
mutate_all(as_label) %>%
mutate(prop = round(n/sum(n), 4)) %>%
kable() %>%
kable_estilo()
homologar_fechas <- function(fecha){
fecha %>%
str_replace_all(c("^\\D{3} " = "", '(.*)(\\d{4}$)' = '\\2 \\1')) %>%
anytime::anytime()
}
epsoc <- epsoc %>%
mutate_at(vars(starts_with('time')), homologar_fechas)
epsoc <- epsoc %>%
mutate(duration = str_replace_all(duration, c('-' = '', '^(\\d{2})' = '0\\.\\1'))) %>%
separate(duration, into = c('dura.d', 'duracion'), sep = '\\.', convert = TRUE, remove = FALSE) %>%
mutate(duracion.t = as.duration(hms(duracion) + hms(hms::hms(hour = (24 * dura.d)))))
epsoc$duracion.t.min <- epsoc$duracion.t@.Data/60
epsoc %>%
ggplot(aes(x = duracion.t.min)) +
geom_histogram(binwidth = 5) +
theme_bw() +
ggtitle("Distribución duración entrevistas por región (escala truncada < 150 minutos)") +
labs(x = "Duración total entrevista (minutos)",
y = "Frecuencia") +
coord_cartesian(xlim = 0:150) +
scale_x_continuous(breaks = seq(0, 150, by = 15)) +
facet_grid(as_factor(region) ~ .)
epsoc %>%
filter(as.double(duracion.t.min) < 20) %>%
select(folio, duracion.t.min) %>%
knitr::kable(col.names = c("Folio", "Duración (minutos)"),
caption = "Entrevistas de menos de 20 minutos",
digits = 1) %>%
kable_estilo() %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
epsoc %>%
filter(as.double(duracion.t.min) > 150) %>%
transmute(folio, duracion.t.min / 60) %>%
knitr::kable(col.names = c("Folio", "Duración (horas)"),
caption = "Entrevistas de más de 150 minutos",
digits = 1) %>%
kable_estilo() %>%
column_spec(1, width = "10em") %>%
column_spec(2, width = "10em")
## Comienzo encuesta
epsoc$time1.hms <- hms::as.hms(epsoc$time1)
epsoc$time1.wday <- lubridate::wday(epsoc$time1)
epsoc$time1.dmy <- date(epsoc$time1)
epsoc %>%
count(time1.dmy) %>%
mutate(n_mean = mean(n)) %>%
ggplot(aes(x = time1.dmy, y = n)) +
geom_line() +
geom_smooth() +
geom_hline(aes(yintercept = n_mean), colour = 'green') +
geom_label(aes(x = min(time1.dmy)[[1]], y = n_mean[[1]], label = round(n_mean, 1))) +
labs(title = 'Número de encuestas por día') +
scale_x_date(breaks = '2 weeks')
epsoc %>%
count(time1.wday) %>%
mutate(n_mean = mean(n)) %>%
ggplot(aes(x = time1.wday, y = n)) +
geom_line() +
geom_smooth() +
geom_hline(aes(yintercept = n_mean), colour = 'green') +
geom_label(aes(x = min(time1.wday)[[1]], y = n_mean[[1]], label = round(n_mean, 1))) +
labs(title = 'Número de encuestas por día de la semana') +
scale_x_continuous(breaks = seq(7))
epsoc %>%
select(folio, latitude, srvyr) %>%
group_by(srvyr) %>%
mutate(n.enc = length(folio)) %>%
filter(is.na(latitude)) %>%
select(folio, srvyr, n.enc) %>%
mutate(n.enc.sg = (length(folio)/n.enc)*100) %>%
arrange(srvyr, folio) %>%
group_by_at(vars(-folio)) %>%
nest() %>%
mutate(Folio = map_chr(data, ~ flatten(.) %>% str_c(., collapse = ', '))) %>%
select(-data) %>%
kable(digits = 1,
col.names = c("Encuestador", "Total encuestas", "% sin georef.", "folios")) %>%
kable_estilo()
epsoc_geo <- epsoc %>%
select(folio, sbj.num, region, srvyr, longitude, latitude) %>%
filter(!is.na(latitude)) %>%
sf::st_as_sf(coords = c('longitude', 'latitude'),
crs = "+proj=longlat +ellps=GRS80")
sf::write_sf(epsoc_geo,
here::here('validacion_epsoc_puntos_respuesta.kml'),
dataset_options=c("NameField=folio"),
delete_dsn=TRUE)
epsoc_geo %>%
filter(region == 2) %>%
ggplot(aes(color = srvyr)) +
geom_sf()
epsoc_geo %>%
filter(region == 9) %>%
ggplot(aes(color = srvyr)) +
geom_sf()
epsoc_geo %>%
filter(region == 13) %>%
ggplot(aes(color = srvyr)) +
geom_sf()
epsoc %>%
select(folio, i.1.grupo) %>%
head()
epsoc %>%
transmute(i.1.grupo = as.integer(i.1.grupo),
region) %>%
group_by_all() %>%
count() %>%
group_by(region) %>%
mutate(n_mean = mean(n)) %>%
ggplot(aes(x = as_factor(i.1.grupo), y = n)) +
geom_col() +
geom_hline(aes(group = region, yintercept = n_mean), colour = 'green') +
geom_text(aes(label = ..y..), nudge_y = 1, size = 3) +
facet_grid(rows = vars(region)) +
labs(title = 'Distribución de viñetas')
## Comienzo viñetas
epsoc$time2.hms <- hms::as.hms(epsoc$time2)
epsoc$time2.dmy <- date(epsoc$time2)
## Fin viñetas
epsoc$time3.hms <- hms::as.hms(epsoc$time3)
epsoc$time3.dmy <- date(epsoc$time3)
epsoc$dura.vinetas <- difftime(epsoc$time3, epsoc$time2,
units = "mins")
ggplot(epsoc, aes(x = time2.dmy, y = time2.hms)) +
geom_point() +
labs(x = "Día", y = "Hora") +
ggtitle("Día y hora comienzo actividad viñetas") +
theme_bw()
ggplot(epsoc, aes(x = srvyr, y = time2.hms)) +
geom_point() +
labs(x = "Encuestador", y = "Hora") +
ggtitle("Hora comienzo actividad viñetas según encuestador") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1))
epsoc %>%
mutate(vin.cort = ifelse(dura.vinetas < 5, "< 5'", ">= 5'")) %>%
ggplot(aes(dura.vinetas)) +
geom_histogram(aes(fill = vin.cort)) + theme_bw() +
theme(legend.title=element_blank()) +
ggtitle("Duración ejercicio viñetas") +
xlab("Minutos")
ggplot(epsoc, aes(x = srvyr, y = dura.vinetas,
colour = status)) +
geom_point(alpha = 0.5,
position = position_jitter(width = .2)) +
scale_color_manual(values = c('green', 'orange', 'blue')) +
facet_grid(cols = vars(region), scales = 'free_x', space = 'free_x') +
labs(x = "Encuestador", y = "minutos") +
ggtitle("Duración de actividad viñetas según encuestador según región") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1))
kable(epsoc %>%
group_by(srvyr) %>%
mutate(n.enc = length(folio)) %>%
select(folio, dura.vinetas, srvyr, n.enc) %>%
filter(dura.vinetas <= 10) %>%
mutate(n.enc.cort = (length(folio)/n.enc)*100) %>%
arrange(srvyr, dura.vinetas),
digits = 1,
col.names = c("Folio", "Duración viñetas", "Encuestador", "Total encuestas", "% cortas"),
caption = "Ejercicio viñetas de menos de 10 minutos") %>%
kable_estilo() #%>%
#column_spec(1, width = "10em") %>%
#column_spec(2, width = "10em") %>%
#column_spec(3, width = "10em")
